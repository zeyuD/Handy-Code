self_dist = [0.6793003155106376, 0.7243055899657797, 0.7108959279306694, 0.7554791824013488, 0.5840047369973279, 0.6143869198923233, 0.6251205902661172, 0.7478232322751505, 0.6453162879723974, 0.699977178682973, 0.8198546967008634, 0.6997817019721441, 0.7488297706269245, 0.734142282333811, 0.6413716201552073];
kinect_front = [0.6475269595048394, 0.6678651889272244, 0.6943141565796752, 0.758280050536213, 0.7020286217417188, 0.7228895685841595, 0.7434530312058002, 0.7415624949188011, 0.8735074033224213, 0.6801106092403039, 0.6275644662727258, 0.7467357077757546, 0.8461760337527934, 0.7502691881212116, 0.8072684327825659, 0.8100777176041982, 0.7984594228011198, 0.8365045042905201, 0.7846866140446224, 0.6718814261450777];
kinect_side = [0.796646947125411, 0.7711377528753955, 0.7667822966238123, 0.8115021429880974, 0.7287491797637143, 0.7944978806422252, 0.7272463356962772, 0.7395934364902956, 0.9115635192837875, 0.7619983001332351, 0.7701732363480946, 0.7828756915160527, 0.8477285378943195, 0.7819149359370272, 0.7598365317082217, 0.8807791528050554, 0.7483887167560072, 0.846009047890309, 0.7846317680593791, 0.7816043360689762];
kinect_RL = [0.8498292645005767, 0.8360318139529549, 0.8309994782804682, 0.8791508582126244, 0.8345580130607554, 0.9059478875479252, 0.8952069706488197, 0.8517716243383487, 0.9984683448400856, 0.878781465502996, 0.8216313122749327, 0.9080574316089071, 0.9587886609772596, 0.924587880793303, 0.8965874634179818, 0.912777569715399, 0.9149167553159421, 0.9727324298328601, 0.9092682364774625, 0.860007223064697];
other_dist =  [
    0.8650474698744696, 0.8395064655593494, 0.8471892695480765, 0.8269888519125815, 0.8527012796597092, 0.8687000941843244,...
    0.9297210863067839, 0.9451325425953004, 0.9848465176738359, 0.9289917338960813, 0.9375068858759992, 0.9472040150937409,...
    0.9652580911761657, 0.9120272306039319, 1.0, 0.9445294942803466, 0.9814673914100654, 0.9180810021875317,...
    0.8909669476703925, 0.8934372134529769, 0.95182186355316, 0.9168819411435409, 0.9172937879081113, 0.9261821288808127,...
    0.9476387146433777, 0.973292494379133, 1.0199895776865278, 0.9330646241220791, 0.9820419457093613, 0.9392380478284938,...
    0.7827696125370007, 0.8393590952779781, 0.7743020241916919, 0.8109736169096058, 0.8305962539460234, 0.8099261820324917
    ];

tpr = zeros(1,100);
fpr = zeros(1,100);
fpr_f = zeros(1,100);
fpr_s = zeros(1,100);
fpr_k = zeros(1,100);
scale = 100;

for threshold = 1:1:100
    tp = 0;
    fp = 0;
    fn = 0;
    tn = 0;
    fp_f = 0;
    tn_f = 0;
    fp_s = 0;
    tn_s = 0;
    fp_k = 0;
    tn_k = 0;

    for i = 1:length(self_dist)
        if self_dist(i) < threshold/scale
            tp = tp+1;
        else
            fn = fn+1;
        end
    end

    for i = 1:length(other_dist)
        if other_dist(i) < threshold/scale
            fp = fp+1;
        else
            tn = tn+1;
        end
    end

    for i = 1:length(kinect_front)
        if kinect_front(i) < threshold/scale
            fp_f = fp_f+1;
        else
            tn_f = tn_f+1;
        end
        if kinect_side(i) < threshold/scale
            fp_s = fp_s+1;
        else
            tn_s = tn_s+1;
        end
    end

    for i = 1:length(kinect_RL)
        if kinect_RL(i) < threshold/scale
            fp_k = fp_k+1;
        else
            tn_k = tn_k+1;
        end
    end

    tpr(threshold) = tp/(tp+fn);
    fpr(threshold) = fp/(fp+tn);
    fpr_f(threshold) = fp_f/(fp_f+tn_f);
    fpr_s(threshold) = fp_s/(fp_s+tn_s);
    fpr_k(threshold) = fp_k/(fp_k+tn_k);
end

lw = 2;
figure('Position',[100,100,800,600]);
hold on;
plot(fpr, tpr, 's-', 'LineWidth', lw, 'DisplayName','Opti-Other Users (Authentication)', "Color", "#0072BD");
plot(fpr_f, tpr, 'o-', 'LineWidth', lw, 'DisplayName',"Kinect-Front (Simulated)", "Color", "#EDB120");
plot(fpr_s, tpr, '^-', 'LineWidth', lw, 'DisplayName','Kinect-Side (Simulated)', "Color", "#77AC30");
plot(fpr_k, tpr, 'diamond-', 'LineWidth', lw, 'DisplayName','Kinect-Side RL Rotated (Simulated)', "Color", "#FF0000");
plot([0, 1], [0, 1], '--', 'LineWidth', lw, "Color", "#0000FF");
xlim([0.0, 1.0]);
ylim([0.0, 1.05]);
xlabel('False Positive Rate');
ylabel('True Positive Rate');
legend('Location','southeast');
set(gca,'FontSize', 16, 'FontWeight', 'bold');